===============================================================================
Prerequisites for building SWISH++ for Unix
===============================================================================

SWISH++ has the following software as prerequisites:

1. A C++ compiler.  SWISH++ has been built using g++ 2.95.3 (2.95.1 may work;
   earlier versions will not) and g++ 3.0; other non-gcc, ANSI C++ compilers
   may work also.

2. A version of STL, the ANSI/ISO C++ Standard Template Library.  If you are
   using g++ or egcs, then you also need (the matching version of) libstd++.

   If you are not using g++, then you need to have a port of STL that works
   with your compiler.  Ports for various platforms are available from
   ObjectSpace, Inc. having a web page at:

	http://www.objectspace.com/

   For more about STL in general, see:

	http://www.cs.rpi.edu/~musser/stl.html
	http://www.sgi.com/Technology/STL/

3. GNU make.

4. Perl 5 (or later), but only if you intend on using either httpindex,
   splitmail, or WWW.pm.

5. The GNU wget command, but only if you intend on using httpindex.

All GNU software is freely available from:

	ftp://prep.ai.mit.edu/pub/gnu/

as well as many other mirror sites.


===============================================================================
Building SWISH++ for Unix
===============================================================================

1. Edit the "config.h" file to your liking.  This file controls how the
   software runs.  You REALLY need to understand and properly set TempDirectory
   and Word_Threshold.  Improperly set, SWISH++ can take hours to index whereas
   it should only take minutes.  Once you understand them, comment out the
   #error lines.  (The #error lines are there intentionally to force you to
   edit the file.)

2. Go to the "config" directory and edit the "config.mk" file as necessary.
   This file controls how the software is compiled.  Among other things, decide
   which indexing modules (MOD_*) you want compiled in.  In particular, decide
   whether you need MOD_MAIL for indexing mail and news files.  If not, you
   shouldn't compile it in since it requires more processing per character and
   will be slower for all files (not just mail and news files).

3. Go back to the top-level directory and type "make".  Note: lines of the
   form:

	GNUmakefile:169: dep/bcd.d: No such file or directory
	GNUmakefile:169: dep/mmap_file.d: No such file or directory
	GNUmakefile:169: dep/conf_var.d: No such file or directory
	...

   are EXPECTED and NORMAL.  Those files INTENTIONALLY are not distributed in
   the tar file.  This causes "make" to build them.  This is a technique
   recommended by the GNU Make authors themselves for generating dependency
   files automatically.

   If everything works out, the software will be built.  If you're root, you
   can also type "make install".


===============================================================================
Notes
===============================================================================

1. Don't complain to me or bother asking me for help if you get either "No such
   file or directory" for or errors in the standard C++ headers.  It means that
   your C++ compiler and/or libraries are improperly installed.  I know nothing
   about your OS or how your system is (mis)configured.  Complain to your
   sysadmin: the person who botched the installation and whose job it is to fix
   it.

2. Don't bother asking me for precompiled binaries for a particular OS -- I
   don't have them.

3. Don't ask me questions like, "Can SWISH++ do this?"  The documentation
   describing SWISH++ is complete.  If you read the documentation and what you
   are looking for is not there, then SWISH++ doesn't do it.
