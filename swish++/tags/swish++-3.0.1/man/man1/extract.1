.\"
.\"	SWISH++
.\"	extract.1
.\"
.\"	Copyright (C) 1998  Paul J. Lucas
.\"
.\"	This program is free software; you can redistribute it and/or modify
.\"	it under the terms of the GNU General Public License as published by
.\"	the Free Software Foundation; either version 2 of the License, or
.\"	(at your option) any later version.
.\" 
.\"	This program is distributed in the hope that it will be useful,
.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\"	GNU General Public License for more details.
.\" 
.\"	You should have received a copy of the GNU General Public License
.\"	along with this program; if not, write to the Free Software
.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
.\"
.\" ---------------------------------------------------------------------------
.\" define code-start macro
.de cS
.sp
.nf
.RS 5
.ft CW
.ta .5i 1i 1.5i 2i 2.5i 3i 3.5i 4i 4.5i 5i 5.5i
..
.\" define code-end macro
.de cE
.ft 1
.RE
.fi
.sp
..
.\" ---------------------------------------------------------------------------
.TH \f3extract\fP 1 "July 31, 1999" "SWISH++"
.SH NAME
extract \- SWISH++ text extractor
.SH SYNOPSIS
.B extract
[
.I options
]
.I directory...
.I file...
.SH DESCRIPTION
.B extract
is the SWISH++ text extractor,
a utility to extract what text there is from a (mostly) binary file
(similar to the
.BR strings (1)
command)
prior to indexing.
Original files are untouched.
.PP
Text is extracted from the specified files
and files in the specified directories;
text from files in subdiretories of specified directories is also extracted
by default (unless the
.B \-r
option or the
.B RecurseSubdirs
variable is given).
Text is extracted from files either only if their filename extension
is among the set specified with either the
.B \-e
option or the
.B IncludeExtension
variable (unless standard input is used; see next paragraph)
or is not among the set specified with either the
.B \-E
option or the
.B ExcludeExtension
variable.
.PP
If there is a single filename of `\f(CW-\f1', the list of directories and files
to extract is instead taken from standard input (one per line).
In this case, filename extensions of files to extract need not be explicitly
specified with the
.B \-e
option; all files, regardless of extension
(unless it is among the set specified with the
.B \-E
option), are extracted, i.e.,
.B extract
assumes you know what you're doing when specifying filenames.
.PP
In any case, care must be taken not to specify files or subdirectories
in directories that are also specified:
since directories are recursively extracted by default (unless the
.B \-r
option or the
.B RecurseSubdirs
variable  is given),
explicitly specifying a subdirectory or file in a directory that is also
specified will result in those files being extracted more than once.
(Unlike with indexing, this is harmless: it just wastes time.)
.PP
Extracted files have the same filename with the ``\f(CW.txt\fP'' extension
appended, e.g., ``\f(CWfoo.doc\fP'' becomes ``\f(CWfoo.doc.txt\fP''
after extraction.
However, extraction is not performed if the extracted text file exists.
.SS Filters
Via the
.B FilterExtension
configuration file variable,
files having particular extensions can be filtered prior to extraction.
(See the examples in
.BR swish++.conf (4).)
.SS Word Determination
.B extract
performs the same character entity conversions
and word determination heuristics as
.BR index (1)
but also additionally:
.TP 4
1.
Considers all PostScript Level 2 operators that are not also English words
to be stop words.
Such words in a file usually indicate an encapsulated PostScript (EPS) file
and such should not be indexed.
.TP
2.
Looks specifically for encapsulated PostScript (EPS) data between
everything between one of
\f(CW%%BeginSetup\fP,
\f(CW%%BoundingBox\fP,
\f(CW%%Creator\fP,
\f(CW%%EndComments\fP,
or
\f(CW%%Title\fP
and
\f(CW%%Trailer\fP
and discards it.
.TP
3.
Discards strings of ASCII hex data \f(CWWord_Hex_Min_Size\fP
characters or longer, e.g., ``\f(CW7F454C46\fP.''
(Default is 5.)
.SS Motivation
.B extract
was developed to be able to index non-text files in proprietary formats
such as Microsoft Office documents.
There are a couple of reasons why the functionality of
.B extract
isn't simply built into
.BR index (1):
.TP 4
1.
Users who do not need to index such documents
shouldn't have to pay the performance penatly for doing the extra checks for
PostScript and hex data.
.TP
2.
While
.BR index (1)
can uncompress files on the fly using filters also,
uncompressing them every time indexing is performed is excessive.
Text extraction, on the other hand, is done only once per file;
if the file is updated, the text-extracted version should be deleted and
recreated.
.SH OPTIONS
.TP 18
.BI \-c config_file
The name of the configuration file to use.
The default is \f(CWswish++.conf\f1 in the current directory.
A configuration file is not required:
if none is specified and the default does not exist, none is used;
however, if one is specified and it does not exist, then this is an error.
.TP
.BI \-e extension
A filename extension of files to extract text from
.I without
the ``dot.''
Case is significant.
Multiple
.B \-e
options may be specified.
.TP
.BI \-E extension
A filename extension of files
.I not
to extract text from
.I without
the ``dot.''
Case is significant.
Multiple
.B \-E
options may be specified.
.TP
.B \-l
Follow symbolic links during extraction.
The default is not to follow them.
(This option is not available under Microsoft Windows
since it doesn't support symbolic links.)
.TP
.B \-r
Do not recursively extract the files in subdirectories,
that is: when a directory is encountered,
all the files in that directory are extracted
(modulo the filename extensions specified via the
.B \-e
or
.B \-E
options or the
.B IncludeExtension
or
.B ExcludeExtension
variables) but subdirectories encountered are ignored
and therefore the files contained in them are not extracted.
(This option is most useful when specifying the directories and files to extract
via standard input.)
The default is to extract the files in subdirectories recursively.
.TP
.BI \-s stop_word_file
The name of a file containing the set stop-words to use
instead of the built-in set.
Whitespace, including blank lines, and characters starting with \f(CW#\f1
and continuing to the end of the line (comments) are ignored.
.TP
.B \-S
Dump the built-in set of stop-words to standard output and exit.
.TP
.BI \-v verbosity
The verbosity level, 0-4:
.PP
.RS 18
.PD 0
.TP 4
0
No output is generated (except for errors).
.TP
1
Only run statistics (elapsed time, number of files, word count) are printed.
.TP
2
Directories are printed as extraction progresses.
.TP
3
Directories and files are printed with a word-count for each file.
.TP
4
Same as 3 but also prints all files that are not extracted and why.
.RE
.PD
.RE
.TP 18
.B \-V
Print the version number of
.BR SWISH++
and exit.
.SH CONFIGURATION FILE
The following variables can be set in a configuration file.
Variables and command-line options can be mixed.
.PP
.RS 5
.PD 0
.TP 18
.B ExcludeExtension
Same as the
.B \-E
option.
.TP
.B FilterExtension
(See Filters.)
.TP
.B FollowLinks
Same as the
.B \-l
option.
.TP
.B IncludeExtension
Same as the
.B \-e
option.
.TP
.B RecurseSubdirs
Same as the
.B \-r
option.
.TP
.B StopWordFile
Same as the
.B \-s
option.
.TP
.B Verbosity
Same as the
.B \-v
option.
.PD
.RE
.SH EXAMPLES
.SS Extraction
To extract text from all Microsoft Office files on a web server:
.cS
cd /home/www/htdocs
extract -v3 -e doc -e ppt -e xls .
.cE
.SS Filters
(See the examples in
.BR swish++.conf (4).)
.SH EXIT STATUS
Exits with one of the values given below:
.PP
.RS 5
.PD 0
.TP 5
0
Success.
.TP
1
Error in configuration file.
.TP
2
Error in command-line options.
.TP
30
Unable to read stop-word file.
.PD
.RE
.SH CAVEATS
Text extraction is not perfect, nor can be.
.SH FILES
.PD 0
.TP 18
\f(CWswish++.conf\f1
default configuration file name
.PD
.SH SEE ALSO
.BR index (1),
.BR search (1),
.BR strings (1),
.BR swish++.conf (4)
.PP
Adobe Systems Incorporated.
``PostScript Langauge Reference Manual, 2nd ed.''
Addison-Wesley, Reading, MA.
pp. 346-359.
.SH AUTHOR
Paul J. Lucas
.RI < pjl@best.com >
