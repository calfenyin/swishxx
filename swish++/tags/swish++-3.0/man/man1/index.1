.\"
.\"	SWISH++
.\"	index.1
.\"
.\"	Copyright (C) 1998  Paul J. Lucas
.\"
.\"	This program is free software; you can redistribute it and/or modify
.\"	it under the terms of the GNU General Public License as published by
.\"	the Free Software Foundation; either version 2 of the License, or
.\"	(at your option) any later version.
.\" 
.\"	This program is distributed in the hope that it will be useful,
.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\"	GNU General Public License for more details.
.\" 
.\"	You should have received a copy of the GNU General Public License
.\"	along with this program; if not, write to the Free Software
.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
.\"
.\" ---------------------------------------------------------------------------
.\" define code-start macro
.de cS
.sp
.nf
.RS 5
.ft CW
.ta .5i 1i 1.5i 2i 2.5i 3i 3.5i 4i 4.5i 5i 5.5i
..
.\" define code-end macro
.de cE
.ft 1
.RE
.fi
.sp
..
.\" ---------------------------------------------------------------------------
.TH \f3index\f1 1 "July 21, 1999" "SWISH++"
.SH NAME
index \- SWISH++ indexer
.SH SYNOPSIS
.B index
[
.I options
]
.I directory...
.I file...
.SH DESCRIPTION
.B index
is the SWISH++ file indexer.
It indexes the specified files
and files in the specified directories;
files in subdiretories of specified directories are also indexed by default
(unless either the
.B \-r
option or the \f(CWRecurseSubdirs\f1 variable is given).
Files are indexed either only if their filename extension is among the set
specified with either the
.B \-e
option or the \f(CWIncludeExtension\f1 variable
(unless standard input is used; see next paragraph)
or is not among the set specified with either the
.B \-E
option or the \f(CWExcludeExtension\f1 variable.
.PP
If there is a single filename of `\f(CW-\f1', the list of directories and files
to index is instead taken from standard input (one per line).
In this case,
filename extensions of files to index need not be specified explicitly:
all files, regardless of extension
(unless it is among the set not to index specified with either the
.B \-E
option or the \f(CWExcludeExtension\f1 variable), are indexed, i.e.,
.B index
assumes you know what you're doing when specifying filenames in this manner.
.PP
In any case, care must be taken not to specify files or subdirectories
in directories that are also specified:
since directories are recursively indexed by default (unless either the
.B \-r
option or the \f(CWRecurseSubdirs\f1 variable  is given),
explicitly specifying a subdirectory or file in a directory that is also
specified will result in those files being indexed more than once.
.PP
.SS Character Entities
Both HTML character and numeric (decimal and hexadecimal) entity references
are converted to their ASCII character equivalents
according to the ISO 8859-1 (Latin 1) character set
before further examination and indexing.
For example, ``r&eacute;sum&#233;'' becomes ``resume'' before indexing.
.SS Word Determination
Stop words, words that occur too frequently or have no information content,
are not indexed.
(There is a default compiled-in set of a few hundred such words.)
Additionally, several heuristics are used to determine which words
should not be indexed.
.PP
First, a word is checked to see if it looks like an acronym.
A word is considered an acronym only if it starts with a capital letter and
is composed exclusively of capital letters, digits, and punctuation symbols,
e.g., ``AT&T.''
If a word looks like an acronym, it is indexed and no further checks are done.
.PP
Second, there are several other checks that are applied.
A word is not indexed if it:
.TP 4
1.
Starts with a capital letter, is of mixed case,
and contains more than a third capital letters, e.g., ``BizZARE.''
.TP
2.
Contains a capital letter other than the first, e.g, ``weIrd.''
.TP
3.
Is less than \f(CWWord_Min_Size\f1 letters.
(Default is 4.)
.TP
4.
Contains less than \f(CWWord_Min_Vowels\f1 vowels.
(Default is 1.)
.TP
5.
Contains more than \f(CWWord_Max_Consec_Same\f1 of the same character
consecutevely (not including digits).
(Default is 2.)
.TP
6.
Contains more than \f(CWWord_Max_Consec_Consonants\f1 consecutive consonants.
(Default is 5.)
.TP
7.
Contains more than \f(CWWord_Max_Consec_Vowels\f1 consecutive vowels.
(Default is 4.)
.TP
8.
Contains more than \f(CWWord_Max_Consec_Puncts\f1 consecutive punctuation
characters.
(Default is 1.)
.SS HTML Files
Additional processing is done for HTML files.
(HTML files are recognized as such only if their filename extension is one of:
\f(CWhtm\f1, \f(CWhtml\f1, or \f(CWshtml\f1.)
The additional processing is:
.TP 4
1.
If a matched set of \f(CW<TITLE>\f1 ... \f(CW</TITLE>\f1 tags is found
within the first \f(CWTitle_Lines\f1 lines of the file (default is 12),
then the text between the tags is stored in the generated index file as the
file's title rather than the file's name.
(Every non-space whitespace character in the title is converted to a space;
leading and trailing spaces are removed.)
.TP
2.
If an HTML element contains a \f(CWCLASS\f1 attribute whose value is among
the set of class names specified as those not to index (via one or more
.B \-C
options),
then all the text up to the tag that ends the element will not be indexed.
.IP ""
For an element that has an optional end tag, ``the tag that ends the element''
is either the element's end tag or a tag of another element that implicitly
ends it;
for an element that does not have an end tag, ``the tag that ends the element''
is the element's start tag.
(See the EXAMPLES.)
.TP
3.
If an HTML element contains a \f(CWTITLE\f1 attribute,
then the words specified as the value of the \f(CWTITLE\f1 attribute
are indexed.
.TP
4.
If an \f(CWAREA\f1, \f(CWIMG\f1, or \f(CWINPUT\f1 element
contains an \f(CWALT\f1 attribute,
then the words specified as the value of the \f(CWALT\f1 attribute
are indexed.
.TP
5.
If a \f(CWMETA\f1 element contains both a \f(CWNAME\f1 and \f(CWCONTENT\f1
attribute, then the words specified
as the value of the \f(CWCONTENT\f1 attribute
are indexed associated with the meta name specified as the value of the
\f(CWNAME\f1 attribute.
(See also the
.B \-m
and
.B \-M
options.)
Meta names can later be queried against specifically using
.BR search (1).
.TP
6.
If a \f(CWTABLE\f1 element contains a \f(CWSUMMARY\f1 attribute,
then the words specified as the value of the \f(CWSUMMARY\f1 attribute
are indexed.
.TP
7.
If an \f(CWOBJECT\f1 element contains a \f(CWSTANDBY\f1 attribute,
then the words specified as the value of the \f(CWSTANDBY\f1 attribute
are indexed.
.TP
8.
All other HTML tags and comments
(anything between \f(CW<\f1 and \f(CW>\f1 characters)
are discarded.
.PP
In compliance with the HTML specification,
any one of no quotes, single quotes, or double quotes may be used
to contain attribute values and attributes can appear in any order.
Values containing whitespace, however, must be quoted.
The specification is vague as to whether whitespace surrounding the \f(CW=\f1
is legal, but
.B index
allows it.
.SS Filters
Via the \f(CWFilterExtension\f1 configuration file variable,
files having particular extensions can be filtered prior to indexing.
(See FILTERS in
.BR swish++.conf (4).)
.SH OPTIONS
.TP 18
.BI \-c config_file
The name of the configuration file to use.
The default is \f(CWswish++.conf\f1 in the current directory.
A configuration file is not required:
if none is specified and the default does not exist, none is used;
however, if one is specified and it does not exist, then this is an error.
.TP
.BI \-C class_name
For HTML files only,
a class name of an HTML element whose text is not to be indexed.
Multiple
.B \-C
options may be specified.
.TP
.BI \-e extension
A filename extension of files to index
.I without
the ``dot.''
Case is significant.
Multiple
.B \-e
options may be specified.
.TP
.BI \-E extension
A filename extension of files
.I not
to index
.I without
the ``dot.''
Case is significant.
Multiple
.B \-E
options may be specified.
.TP
.BI \-f file_max
The maximum number of files a word may occur in
before it is discarded as being too frequent.
The default is infinity.
.TP
.BI \-F file_reserve
Reserve space for this number of files to start.
More space will be allocated as necessary,
but with a slight performace penalty.
The default is 1000.
.TP
.BI \-i index_file
The name of the generated index file.
The default is \f(CWthe.index\f1 in the present working directory.
.TP
.B \-l
Follow symbolic links during indexing.
The default is not to follow them.
(This option is not available under Microsoft Windows
since it doesn't support symbolic links.)
.TP
.BI \-m meta_name
For HTML files only, the value of a meta \f(CWNAME\f1 attribute
for which the words in the value of the associated \f(CWCONTENT\f1 attribute
should be indexed.
Case is irrelevant.
Multiple
.B \-m
options may be specified.
.IP ""
By default, words in the value of the \f(CWCONTENT\f1 attribute
for all meta names are indexed.
Specifying at least one meta name via this option changes that
so that only the words in the value of the \f(CWCONTENT\f1 attribute
associated with a member of the set of meta names
explicitly specified via one or more
.B \-m
options are indexed.
.TP
.BI \-M meta_name
For HTML files only, the value of a meta \f(CWNAME\f1 attribute
for which the words in the value of the associated \f(CWCONTENT\f1 attribute
should not be indexed.
Case is irrelevant.
Multiple
.B \-M
options may be specified.
.TP
.BI \-p percent_max
The maximum percentage of files a word may occur in
before it is discarded as being too frequent.
The default is 100.
If you want to keep all words regardless, specify 101.
.TP
.B \-r
Do not recursively index the files in subdirectories,
that is: when a directory is encountered,
all the files in that directory are indexed
(modulo the filename extensions specified via the
.B \-e
or
.B \-E
options),
but subdirectories encountered are ignored
and therefore the files contained in them are not indexed.
(This option is most useful when specifying the directories and files to index
via standard input.)
The default is to index the files in subdirectories recursively.
.TP
.BI \-s stop_word_file
The name of a file containing the set of stop-words to use
instead of the built-in set.
Whitespace, including blank lines, and characters starting with \f(CW#\f1
and continuing to the end of the line (comments) are ignored.
.TP
.B \-S
Dump the built-in set of stop-words to standard output and exit.
.TP
.BI \-t title_lines
For HTML files only, the maximum number of lines into a file
to look at for HTML \f(CW<TITLE>\f1 tags.
The default is 12.
Larger numbers slow indexing.
.TP
.BI \-T temp_dir
The path of the directory to use for temporary files.
The directory must exist.
The default is \f(CW/tmp\f1.
.IP ""
If your OS mounts swap space on \f(CW/tmp\f1,
as indexing progresses and more files get created in \f(CW/tmp\f1,
you will have less swap space, indexing will get slower,
and you may run out of memory.
If this is the case, you can specify a directory on a real filesystem, i.e.,
one on a physical disk.
.TP
.BI \-v verbosity
Print additional information to standard output during indexing.
The verbosity levels, 0-4, are:
.PP
.RS 18
.PD 0
.TP 4
0
No output is generated (except for errors).
.TP
1
Only run statistics (elapsed time, number of files, word count) are printed.
.TP
2
Directories are printed as indexing progresses.
.TP
3
Directories and files are printed with a word-count for each file.
.TP
4
Same as 3 but also prints all files that are not indexed and why.
.RE
.PD
.RE
.TP 18
.B \-V
Print the version number of
.B SWISH++
to standard output and exit.
.SH CONFIGURATION FILE
The following variables can be set in a configuration file.
Variables and command-line options can be mixed,
the latter taking priority.
.PP
.RS 5
.PD 0
.TP 18
.B ExcludeClass
Same as the
.B \-C
option.
.TP
.B ExcludeExtension
Same as the
.B \-E
option.
.TP
.B ExcludeMeta
Same as the
.B \-M
option.
.TP
.B FilesReserve
Same as the
.B \-F
option.
.TP
.B FilterExtension
(See FILTERS in
.BR swish++.conf (4).)
.TP
.B FollowLinks
Same as the
.B \-l
option.
.TP
.B IncludeExtension
Same as the
.B \-e
option.
.TP
.B IncludeMeta
Same as the
.B \-m
option.
.TP
.B IndexFile
Same as the
.B \-i
option.
.TP
.B RecurseSubdirs
Same as the
.B \-r
option.
.TP
.B StopWordFile
Same as the
.B \-s
option.
.TP
.B TempDirectory
Same as the
.B \-T
option.
.TP
.B TitleLines
Same as the
.B \-t
option.
.TP
.B Verbosity
Same as the
.B \-v
option.
.TP
.B WordFilesMax
Same as the
.B \-f
option.
.TP
.B WordPercentMax
Same as the
.B \-p
option.
.PD
.RE
.SH EXAMPLES
.SS Command-lines
To index all HTML and text files on a web server:
.cS
cd /home/www/htdocs
index -v3 -e html -e shtml -e txt .
.cE
To index all files not under directories named \f(CWSCCS\f1:
.cS
cd /home/www/htdocs
find . -name SCCS -prune -o -type f -a -print | index -
.cE
.SS Using \f(CWCLASS\fP attributes to index selectively
In an HTML document, there may be sections that should not be indexed.
For example, if every page of a web site contains a navigation menu such as:
.cS
<SELECT NAME="menu">
<OPTION>Home
<OPTION>Automotive
<OPTION>Clothing
<OPTION>Hardware
</SELECT>
.cE
or a common header and footer, then, ordinarily,
those words would be indexed for every page and therefore be discarded
because they would be too frequent.
However, via the
.B \-C
option, one or more class names can be specified and then HTML elements
belonging to one of those classes will not have the text
up to the tag that ends them indexed.
Given a class name of, say, \f(CWno_index\f1, the above menu can be changed to:
.cS
<SELECT NAME="menu" CLASS="no_index">
.cE
and then everything up to the \f(CW</SELECT>\f1 tag will not be indexed.
.PP
For an HTML element that has an optional end tag
(such as the \f(CW<P>\f1 element),
the text up to the tag that ends it will not be indexed,
which is either the element's own end tag
or a tag of some other element that implicitly ends it.
For example, in:
.cS
<P CLASS="no_index">
This was the poem that Alice read:
<BLOCKQUOTE>
<B>Jabberwocky</B><BR>
`Twas brillig, and the slithy toves<BR>
Did gyre and gimble in the wabe;<BR>
All mimsy were the borogoves,<BR>
And the mome raths outgrabe.
</BLOCKQUOTE>
.cE
the \f(CW<BLOCKQUOTE>\f1 tag implicitly ends the \f(CW<P>\f1 element
(as do all block-level elements)
so the only text that is not indexed above is:
``This was the poem that Alice read.''
.PP
For an HTML element that does not have an end tag,
only the text within the start tag will not be indexed.
For example, in:
.cS
<IMG SRC="home.gif" ALT="Home" CLASS="no_index">
.cE
the word ``Home'' will not be indexed even though it ordinarily would have been
if the \f(CWCLASS\f1 attribute were not there.
.SS Filters
(See Filters under EXAMPLES in
.BR swish++.conf (4).)
.SH EXIT STATUS
Exits with one of the values given below:
.PP
.RS 5
.PD 0
.TP 5
0
Success.
.TP
1
Error in configuration file.
.TP
2
Error in command-line options.
.TP
10
Unable to open temporary file.
.TP
11
Unable to write index file.
.TP
12
Unable to write temporary file.
.TP
30
Unable to read stop-word file.
.PD
.RE
.SH CAVEATS
.TP 4
1.
Files without extensions can not be indexed.
.TP
2.
Generated index files are machine-dependent
(size of data types and byte order).
.TP
3.
The character encoding always used is ISO 8859-1 (Latin 1).
Character encodings specified either in \f(CWMETA\f1 elements
or via the \f(CWcharset\f1 attribute in other elements are ignored.
.SH FILES
.PD 0
.TP 16
\f(CWswish++.conf\f1
default configuration file name
.TP
\f(CWswish++.index\f1
default index file name
.PD
.SH SEE ALSO
.BR extract (1),
.BR find (1),
.BR search (1),
.BR swish++.conf (4)
.PP
International Standards Organization.
``ISO 8859-1: Information Processing
-- 8-bit single-byte coded graphic character sets
-- Part 1: Latin alphabet No. 1.''
1987.
.PP
\-\-.
``ISO 8879: Information Processing
-- Text and Office Systems
-- Standard Generalized Markup Language (SGML)''
1986.
.PP
Dave Raggett, Arnaud Le Hors, and Ian Jacobs.
``On SGML and HTML: SGML constructs used in HTML: Entities,''
.I HTML 4.0 Specification, section 3.2.3,
World Wide Web Consortium,
April 1998.
.RS
http://www.w3.org/TR/PR-html40/intro/sgmltut.html#h-3.2.3
.RE
.PP
\-\-.
``The global structure of an HTML document: The document head: The \f(CWtitle\f1 attribute,''
.I HTML 4.0 Specification, section 7.4.3,
World Wide Web Consortium, April 1998.
.RS
http://www.w3.org/TR/REC-html40/struct/global.html#adef-title
.RE
.PP
\-\-.
``The global structure of an HTML document: The document head: Meta data,''
.I HTML 4.0 Specification, section 7.4.4,
World Wide Web Consortium, April 1998.
.RS
http://www.w3.org/TR/PR-html40/struct/global.html#h-7.4.4
.RE
.PP
\-\-.
``The global structure of an HTML document: The document body: Element identifiers: the \f(CWid\f1 and \f(CWclass\f1 attributes,''
.I HTML 4.0 Specification, section 7.5.2,
World Wide Web Consortium, April 1998.
.RS
http://www.w3.org/TR/PR-html40/struct/global.html#h-7.5.2
.RE
.PP
\-\-.
``Tables: Elements for constructing tables: The \f(CWTABLE\f1 element,''
.I HTML 4.0 Specification, section 11.2.1,
World Wide Web Consortium, April 1998.
.RS
http://www.w3.org/TR/REC-html40/struct/tables.html#adef-summary
.RE
.PP
\-\-.
``Objects, Images, and Applets: Generic inclusion: the \f(CWOBJECT\f1 element,''
.I HTML 4.0 Specification, section 13.3,
World Wide Web Consortium, April 1998.
.RS
http://www.w3.org/TR/REC-html40/struct/objects.html#adef-standby
.RE
.PP
\-\-.
``Objects, Images, and Applets: How to specify alternate text,''
.I HTML 4.0 Specification, section 13.8,
World Wide Web Consortium, April 1998.
.RS
http://www.w3.org/TR/REC-html40/struct/objects.html#h-13.8
.RE
.SH AUTHOR
Paul J. Lucas
.RI < pjl@best.com >
