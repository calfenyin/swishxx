#! /bin/sh
##
#	SWISH++
#	init_modules-sh
#
#	Copyright (C) 2001  Paul J. Lucas
#
#	This program is free software; you can redistribute it and/or modify
#	it under the terms of the GNU General Public License as published by
#	the Free Software Foundation; either version 2 of the License, or
#	(at your option) any later version.
#
#	This program is distributed in the hope that it will be useful,
#	but WITHOUT ANY WARRANTY; without even the implied warranty of
#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#	GNU General Public License for more details.
#
#	You should have received a copy of the GNU General Public License
#	along with this program; if not, write to the Free Software
#	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
##

cat <<!
/*
**	SWISH++
**	init_modules.c
**
**	Copyright (C) 2001  Paul J. Lucas
**
**	This program is free software; you can redistribute it and/or modify
**	it under the terms of the GNU General Public License as published by
**	the Free Software Foundation; either version 2 of the License, or
**	(at your option) any later version.
**
**	This program is distributed in the hope that it will be useful,
**	but WITHOUT ANY WARRANTY; without even the implied warranty of
**	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
**	GNU General Public License for more details.
**
**	You should have received a copy of the GNU General Public License
**	along with this program; if not, write to the Free Software
**	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
*/

/*
**	Note: This file was automatically generated on:
**	`date`.
*/

// local
#include "indexer.h"
!

MOD_HEADERS=`echo mod/*/mod_*.h`

for header in $MOD_HEADERS
do cat <<!
#ifdef	`basename $header | sed 's/\.h$//'`
#include "$header"
#endif
!
done

cat <<!

//*****************************************************************************
//
// SYNOPSIS
//
	/* static */ void indexer::init_modules()
//
// DESCRIPTION
//
//	This function is a place to bundle together the construction of the
//	singleton instances of indexer modules.  The base indexer() constructor
//	will add pointers to them into the static mod_name-to-instance map.
//
//*****************************************************************************
{
!

for header in $MOD_HEADERS
do
	CLASS=`fgrep " : public indexer" $header | sed 's/.*class  *\([A-Za-z_][A-Za-z0-9_]*\).*/\1/'`
	cat <<!
#ifdef	`basename $header | sed 's/\.h$//'`
	static $CLASS	${CLASS}_instance;
#endif
!
done

cat <<!
	// The plain text indexer is initialized in indexer::map_ref().
}
!
