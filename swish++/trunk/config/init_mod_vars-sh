#! /bin/sh
##
#       SWISH++
#       config/init_mod_vars-sh
#
#       Copyright (C) 2001  Paul J. Lucas
#
#       This program is free software; you can redistribute it and/or modify
#       it under the terms of the GNU General Public License as published by
#       the Free Software Foundation; either version 2 of the License, or
#       (at your option) any later version.
#
#       This program is distributed in the hope that it will be useful,
#       but WITHOUT ANY WARRANTY; without even the implied warranty of
#       MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#       GNU General Public License for more details.
#
#       You should have received a copy of the GNU General Public License
#       along with this program; if not, write to the Free Software
#       Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
##

cat <<!
/*
**      SWISH++
**      src/init_mod_vars.c
**
**      Copyright (C) 2001  Paul J. Lucas
**
**      This program is free software; you can redistribute it and/or modify
**      it under the terms of the GNU General Public License as published by
**      the Free Software Foundation; either version 2 of the License, or
**      (at your option) any later version.
**
**      This program is distributed in the hope that it will be useful,
**      but WITHOUT ANY WARRANTY; without even the implied warranty of
**      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
**      GNU General Public License for more details.
**
**      You should have received a copy of the GNU General Public License
**      along with this program; if not, write to the Free Software
**      Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
*/

/*
**      Note: This file was automatically generated on:
**      `date`.
*/

// local
#include "conf_var.h"

//*****************************************************************************
//
// SYNOPSIS
//
        /* static */ void conf_var::init_mod_vars()
//
// DESCRIPTION
//
//      This function is a place to bundle together the construction of the
//      singleton instances of indexer modules.  The base indexer() constructor
//      will add pointers to them into the static mod_name-to-instance map.
//
//*****************************************************************************
{
!

for header in mod/*/mod_*.h
do
    VARS_FILE=`dirname $header`/vars
    [ -f $VARS_FILE ] || continue
    cat $VARS_FILE | while read var_name
    do cat <<!
#ifdef  `basename $header | sed -e 's/\.h$//' -e 's/mod_/MOD_/'`
    conf_var::register_var( "$var_name" );
#endif
!
    done
done

cat <<!
}
!

# vim:set et sw=4 ts=4:
