.\"
.\"	SWISH++
.\"	swish++.conf.4
.\"
.\"	Copyright (C) 1998  Paul J. Lucas
.\"
.\"	This program is free software; you can redistribute it and/or modify
.\"	it under the terms of the GNU General Public License as published by
.\"	the Free Software Foundation; either version 2 of the License, or
.\"	(at your option) any later version.
.\" 
.\"	This program is distributed in the hope that it will be useful,
.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\"	GNU General Public License for more details.
.\" 
.\"	You should have received a copy of the GNU General Public License
.\"	along with this program; if not, write to the Free Software
.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
.\"
.\" ---------------------------------------------------------------------------
.\" define code-start macro
.de cS
.sp
.nf
.RS 5
.ft CW
.ta .5i 1i 1.5i 2i 2.5i 3i 3.5i 4i 4.5i 5i 5.5i
..
.\" define code-end macro
.de cE
.ft 1
.RE
.fi
.sp
..
.\" ---------------------------------------------------------------------------
.TH "\f3swish++.conf\f1" 4 "December 12, 2000" "SWISH++"
.SH NAME
swish++.conf \- SWISH++ configuration file format
.SH DESCRIPTION
The configuration file format used by SWISH++ consists of three types of lines:
comments, blank lines, and variable definitions.
.SS Comments
Comments start with the \f(CW#\f1 character
and continue up to and including the end of the line.
While leading whitespace is permitted,
.BR "comments are treated as such only if they are on lines by themselves" .
.SS Blank lines
Blank lines, or lines consisting entirely of whitespace, are ignored.
.SS Variable definitions
Variable definition lines are of the form:
.cS
.ft 2
variable_name argument(s)
.cE
where
.I variable_name
is a member of one of the types described in the remaining sections, and
.I argument(s)
are specific to every variable name.
.SS Boolean variables
Variables of this type take one argument that must be one of:
\f(CWf\f1,
\f(CWfalse\f1,
\f(CWn\f1,
\f(CWno\f1,
\f(CWoff\f1,
\f(CWon\f1,
\f(CWt\f1,
\f(CWtrue\f1,
\f(CWy\f1,
or
\f(CWyes\f1.
Case is irrelevant.
Variables of this type are:
.BR ExtractFilter ,
.BR Incremental ,
.BR RecurseSubdirs ,
and
.BR StemWords .
.SS Enumeration variables
Variables of this type are just like string variables (see below)
except that the argument
.I must
be one of a set of pre-determined values.
Case is irrelevant.
Variables of this type are:
.BR SearchDaemon .
.P
.B SearchDaemon
must be one of:
\f(CWnone\f1,
\f(CWtcp\f1,
\f(CWunix\f1,
or
\f(CWboth\f1.
.SS Integer variables
Variables of this type take one numeric argument.
A special string of \f(CWinfinity\f1 is taken to mean
``the largest possible integer value.''
Case is irrelevant.
Variables of this type are:
.BR ResultsMax ,
.BR SocketQueueSize ,
.BR SocketTimeout ,
.BR ThreadsMax ,
.BR ThreadsMin ,
.BR ThreadTimeout ,
.BR TitleLines ,
.BR Verbosity ,
.BR WordFilesMax ,
and
.BR WordPercentMax .
.SS String variables
Variables of this type take one argument that is the remainder of the line
minus leading and trailing whitespace.
Variables of this type are:
.BR ExtractExtension ,
.BR IndexFile ,
.BR PidFile ,
.BR SocketFile ,
and
.BR StopWordFile .
.SS Set variables
Variables of this type take one or more arguments separated by whitespace.
Variables of this type are:
.BR ExcludeClass ,
.BR ExcludeFile ,
.BR ExtractFile ,
and
.BR ExcludeMeta .
.SS Other variables
Variables of this type are:
.BR IncludeFile ,
.BR IncludeMeta ,
.BR FilesGrow ,
.B FilterFile
(see FILTERS below),
and
.BR SocketAddress .
.P
An
.B IncludeFile
configuration file line is of the form:
.cS
\f2module_name\fP \f2pattern ...\fP
.cE
where
.I "module_name"
is the name of the module
(case is irrelevant)
to handle the indexing of the filename
.IR pattern s
that follow.
Module names are:
\f(CWtext\f1 (plain text),
\f(CWHTML\f1 (HTML and XHTML),
and
\f(CWMail\f1 (mail and news messages).
.P
A
.B IncludeMeta
configuration file line is of the form:
.cS
name\f3[\fP=\f2new_name\fP\f3]\fP \f2...\fP
.cE
It is like a set variable except arguments may optionally be followed
by reassignments.
For example, a value of:
.cS
adr=address
.cE
says to include and index the words associated with the meta name \f(CWadr\f1,
but to store the name as \f(CWaddress\f1 in the generated index file
so that queries would use \f(CWaddress\f1 rather than \f(CWadr\f1.
.P
The
.B FilesGrow
variable is just like an integer variable
except that it may contain a trailing percent sign \f(CW%\f1
to indicate a percentage rather than an absolute number.
.P
A
.B SocketAddress
configuration file line is of the form:
.cS
\f3[\fP \f2host\fP : \f3]\fP \f2port\fP
.cE
that is: an optional host and colon
followed by a port number.
The
.I host
may be one of a host name, an IP address, or the \f(CW*\f1 character
meaning ``any IP address.''
Omitting the
.I host
and colon also means ``any IP address.''
.SH FILTERS
Via the
.H FilterFile
configuration file variable,
files matching particular patterns can be filtered
prior to indexing or extraction.
A
.B FilterFile
configuration file line is of the form:
.cS
\f2pattern command\fP
.cE
where
.I pattern
is a filename pattern and
.I command
is the command-line to execute the filter.
.PP
Within a command,
there are a few \f(CW%\f1 or \f(CW@\f1 substitutions
that are substituted at run-time:
.PP
.RS 5
.PD 0
.TP 5
.B b
Basename of filename.
.TP
.B B
Basename minus last extension.
.TP
.B e
Extension of filename.
.TP
.B f
Entire filename.
.TP
.B F
Filename minus last extension.
.RE
.PD
.PP
The @ substitution is used to indicate which filename is the target
or product of the filter.
There must be exactly one @ substitution.
This file is subsequently deleted after indexing or extraction.
A file can be filtered more than once prior to indexing or extraction, i.e.,
filters can be ``chained'' together.
.PP
Note, however, that just because a filename has an extension
for which a filter has been specified
does not mean that a file will be filtered
and subsequently indexed or extracted.
When
.B index
or
.B extract
encounters a file having an extension for which a filter has been specified,
it performs the filename substitution(s) on it first
to determine what the target filename would be.
If the extension of
.I that
filename should be indexed or extracted
(because it is among the set of extensions specified with either the
.B \-e
option or the
.B IncludeFile
variable
or is not among the set specified with either the
.B \-E
option or the
.B ExcludeFile
variable),
then the filter(s) are executed to create it.
(See the EXAMPLES.)
.PP
The
.B b
and
.B B
substititions can be used when the temporary files should be created
in directories other than where the original files are, e.g., \f(CW/tmp\f1.
.PP
To use a literal \f(CW%\f1 or \f(CW@\f1, simply double it.
.SH EXAMPLES
.SS Filters
To uncompress \f(CWgzip\f1'd and \f(CWcompress\f1'd files
prior to indexing or extraction, the
.B FilterFile
variable lines in a configuration file would be:
.cS
FilterFile *.gz   gunzip -c %f > @F
FilterFile *.Z    uncompress -c %f > @F
.cE
Given that, a filename such as \f(CWfoo.txt.gz\f1 would become \f(CWfoo.txt\f1.
If files having \f(CWtxt\f1 extensions should be indexed, then it will be.
Note that the command on the
.B FilterFile
line must
.I not
simply be:
.cS
gunzip @f
.cE
because \f(CWgunzip\f1 will
.I replace
the compressed file with the uncompressed one.
.PP
Here's an example to convert PDF to plain text for indexing using the
.BR xpdf (1)
package's \f(CWpdftotext\f1 command:
.cS
FilterFile *.pdf  pdftotext %f @F.txt
.cE
Not that if used in conjunction with the uncompression filters above,
then compressed PDF files will also be indexed, i.e.,
filenames ending with wither a \f(CW.pdf.gz\f1 or \f(CW.pdf.Z\f1
double extension.
.SH SEE ALSO
.BR compress (1),
.BR extract (1),
.BR gunzip (1),
.BR gzip (1),
.BR index (1),
.BR pdftotext (1),
.BR search (1),
.BR uncompress (1),
.BR glob (7)
.PP
International Standards Organization.
``ISO/IEC 9945-2: Information Technology
-- Portable Operating System Interface (POSIX)
-- Part 2: Shell and Utilities,''
1993.
.SH AUTHOR
Paul J. Lucas
.RI < pauljlucas@mac.com >
