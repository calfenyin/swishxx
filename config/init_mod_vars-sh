#! /bin/sh
##
#       SWISH++
#       config/init_mod_vars-sh
#
#       Copyright (C) 2001  Paul J. Lucas
#
#       This program is free software; you can redistribute it and/or modify
#       it under the terms of the GNU General Public License as published by
#       the Free Software Foundation; either version 2 of the License, or
#       (at your option) any later version.
#
#       This program is distributed in the hope that it will be useful,
#       but WITHOUT ANY WARRANTY; without even the implied warranty of
#       MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#       GNU General Public License for more details.
#
#       You should have received a copy of the GNU General Public License
#       along with this program; if not, write to the Free Software
#       Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
##

cat <<END
/*
**      SWISH++
**      src/init_mod_vars.c
**
**      Copyright (C) 2001-2015  Paul J. Lucas
**
**      This program is free software; you can redistribute it and/or modify
**      it under the terms of the GNU General Public License as published by
**      the Free Software Foundation; either version 2 of the License, or
**      (at your option) any later version.
**
**      This program is distributed in the hope that it will be useful,
**      but WITHOUT ANY WARRANTY; without even the implied warranty of
**      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
**      GNU General Public License for more details.
**
**      You should have received a copy of the GNU General Public License
**      along with this program; if not, write to the Free Software
**      Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
*/

/*
**      Note: This file was automatically generated on:
**      `date`.
*/

// local
#include "config.h"
#include "conf_var.h"

/**
 * This function is a place to bundle together the construction of the
 * singleton instances of indexer modules.  The base indexer() constructor will
 * add pointers to them into the static mod_name-to-instance map.
 */
void conf_var::init_mod_vars() {
END

for HEADER in mod/*/mod_*.h
do
  VARS_FILE=`dirname $HEADER`/vars
  [ -f $VARS_FILE ] || continue
  cat $VARS_FILE | while read var_name
  do
    IDENT=`basename $HEADER | sed -e 's/\.h$//' -e 's/mod_/MOD_/'`
    cat <<END
#ifdef $IDENT
  conf_var::register_var( "$var_name" );
#endif /* $IDENT */
END
  done # while
done # for

cat <<END
}
END

# vim:set et sw=2 ts=2:
